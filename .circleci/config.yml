version: 2.1
commands:
  setup:
    steps:
      - checkout
      - run:
          name: Update arm machine
          command: |
            sudo apt-get update
jobs:
  build-ray-1-12-0:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium
    steps:
      - setup
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build docker image and push
          command: |
            export RAY_TAG=ray-1.12.0
            export PYTHON_VERSION=3.8
            docker build -t jppgks/ray-arm64:${PYTHON_VERSION}-${RAY_TAG} --build-arg PYTHON_VERSION=${PYTHON_VERSION} --build-arg RAY_TAG=${RAY_TAG} -f ray.Dockerfile .
            docker push jppgks/ray-arm64:${PYTHON_VERSION}-${RAY_TAG}
  build-torchvision-0-12:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium
    steps:
      - setup
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build docker image and push
          command: |
            export TORCHVISION_VERSION=0.12
            export PYTHON_VERSION=3.8
            docker build -t jppgks/torchvision-arm64:${PYTHON_VERSION}-${TORCHVISION_VERSION} --build-arg PYTHON_VERSION=${PYTHON_VERSION} --build-arg TORCHVISION_BRANCH=release/${TORCHVISION_VERSION} -f torchvision.Dockerfile .
            docker push jppgks/torchvision-arm64:${PYTHON_VERSION}-${TORCHVISION_VERSION}
  build-ludwig-master:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium
    steps:
      - setup
      - run:
          name: Login to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build docker image and push
          command: |
            export PYTHON_VERSION=3.8
            export TORCHVISION_TAG=3.8-0.12
            export TORCHVISION_WHEEL=torchvision-0.12.0a0+9b5a3fe-cp38-cp38-linux_aarch64.whl
            export RAY_TAG=3.8-ray-1.12.0
            export RAY_WHEEL=ray-1.12.0-cp38-cp38-linux_aarch64.whl
            docker build -t jppgks/ludwig-arm64 --build-arg PYTHON_VERSION=${PYTHON_VERSION} --build-arg TORCHVISION_TAG=${TORCHVISION_TAG} --build-arg TORCHVISION_WHEEL=${TORCHVISION_WHEEL} --build-arg RAY_TAG=${RAY_TAG} --build-arg RAY_WHEEL=${RAY_WHEEL} -f ludwig.Dockerfile .
            docker push jppgks/ludwig-arm64
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-ray-1-12-0
      - build-torchvision-0-12
      - build-ludwig-master
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - build-ludwig-master
